/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.msc.manuels;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.itextpdf.io.image.ImageDataFactory;
import com.itextpdf.kernel.geom.PageSize;
import java.awt.Desktop;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.Field;
import java.net.URI;
import java.util.Arrays;
import java.util.Comparator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.commons.io.FileUtils;
import com.itextpdf.layout.element.Image;
import java.awt.event.KeyEvent;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Michael
 */
public class NewJFrame extends javax.swing.JFrame {

    private static final File CONFIG_FILE = new File("./config.json");

    private Config config;
    private File folder;
    private Magick magick;

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        this.setLocationRelativeTo(null); //pour centrer l'appli au milieu de l'ecran
        initConfig();
        peupleComposant();
        magick = new Magick(config);
    }

    private void initConfig() {
        try {
            Gson gson = new GsonBuilder().setPrettyPrinting().create();
            if (!CONFIG_FILE.exists()) {
                CONFIG_FILE.createNewFile();
                config = new Config();
                String res = gson.toJson(config);
                FileUtils.write(CONFIG_FILE, res, "UTF-8");
                JOptionPane.showMessageDialog(this, "Attention il faut remplir le fichie de config (config.json)\nLa partie magck", "Erreur", JOptionPane.ERROR_MESSAGE);
                System.exit(0);
                return;
            }
            String jsonconfig = FileUtils.readFileToString(CONFIG_FILE, "UTF-8");
            config = gson.fromJson(jsonconfig, Config.class);
            if (config.magickCommande.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Attention il faut remplir le fichie de config (config.json)\nLa partie magck", "Erreur", JOptionPane.ERROR_MESSAGE);
                System.exit(0);
            }
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void peupleComposant() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel();
        String pageSizes[] = {"A0", "A1", "A2", "A3", "A4", "A5", "A6", "A7", "A8", "A9", "A10", "B0", "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "DEFAULT", "EXECUTIVE", "LEDGER", "LEGAL", "LETTER", "TABLOID"};
        model.addAll(Arrays.asList(pageSizes));
        model.setSelectedItem("A5");
        this.jComboBoxImg2PdfPageSize.setModel(model);

        this.jListCropAGarder.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        this.jListCropAExclure.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        this.jListRotate.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        this.jListRenameList.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        this.jListConvertAGarder1.setModel(new DefaultListModel<String>());
        this.jListConvertAExclure1.setModel(new DefaultListModel<String>());

    }

    private void saveConfig() {
        Gson gson = new GsonBuilder().setPrettyPrinting().create();
        String res = gson.toJson(config);
        try {
            FileUtils.write(CONFIG_FILE, res, "UTF-8");
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void moveFileToFolder(File original, String folderDest) {
        new File(folder, folderDest).mkdirs();
        File originalPdf = new File(folder, folderDest + "/" + original.getName());
        try {
            FileUtils.moveFile(original, originalPdf);
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupImg2Pdf = new javax.swing.ButtonGroup();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanelPdf2Imag = new javax.swing.JPanel();
        jButtonConvertPdf2Img = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelPdf2imgNbImg = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jFormattedTextFieldPdf2Img = new javax.swing.JFormattedTextField();
        jPanelRename = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListRenameList = new javax.swing.JList<>();
        jButtonConvertirRename = new javax.swing.JButton();
        jButtonRenameUp = new javax.swing.JButton();
        jButtonRenameDown = new javax.swing.JButton();
        jButtonRenameSuppr = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButtonRenameReset = new javax.swing.JButton();
        jLabelRenameNbImage1 = new javax.swing.JLabel();
        jPanelCrop = new javax.swing.JPanel();
        jButtonConvertCrop = new javax.swing.JButton();
        jTextFieldCrop1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabelCropNbImg = new javax.swing.JLabel();
        jLabelNbImageCrop = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldCrop2 = new javax.swing.JTextField();
        jLabelCropinfoGeometryURL = new javax.swing.JLabel();
        jLabelCropInfos = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListCropAGarder = new javax.swing.JList<>();
        jButtonCropLister = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListCropAExclure = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jButtonCropToExclude = new javax.swing.JButton();
        jButtonCropToInclude = new javax.swing.JButton();
        jLabelCropInfosList = new javax.swing.JLabel();
        jPanelimg2Pdf = new javax.swing.JPanel();
        jButtonConvertImg2Pdf = new javax.swing.JButton();
        jComboBoxImg2PdfPageSize = new javax.swing.JComboBox<>();
        jLabelImg2PdfBDBelge = new javax.swing.JLabel();
        jRadioButtonStendard = new javax.swing.JRadioButton();
        jRadioButtonOriginal = new javax.swing.JRadioButton();
        jRadioButtonBdBelge = new javax.swing.JRadioButton();
        jLabel18 = new javax.swing.JLabel();
        jLabelImg2PdfOriginal = new javax.swing.JLabel();
        jLabelImg2Stendard = new javax.swing.JLabel();
        jFormattedTextFieldImg2PdfHeight = new javax.swing.JFormattedTextField();
        jFormattedTextFieldImg2PdfWidth = new javax.swing.JFormattedTextField();
        jLabelImg2PDFNbImg1 = new javax.swing.JLabel();
        jPanelResize = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldResizeText = new javax.swing.JTextField();
        jLabelResizenfoURL1 = new javax.swing.JLabel();
        jButtonConvertirResize = new javax.swing.JButton();
        jLabel1ConvertNbImage = new javax.swing.JLabel();
        jCheckBoxResize = new javax.swing.JCheckBox();
        jLabelResizenfoURL2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListResize = new javax.swing.JList<>();
        jButtonResizeLister1 = new javax.swing.JButton();
        jLabelResizeInfos = new javax.swing.JLabel();
        jCheckBoxResizeAllSelect = new javax.swing.JCheckBox();
        jPanelConvert = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldConvertExt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jButtonConvertireConvert = new javax.swing.JButton();
        jLabelConvertNbImg = new javax.swing.JLabel();
        jCheckBoxConvertgrayscale = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jListConvertAExclure1 = new javax.swing.JList<>();
        jButtonConcertToExclude1 = new javax.swing.JButton();
        jButtonConvertToInclude1 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jListConvertAGarder1 = new javax.swing.JList<>();
        jButtonConvertLister1 = new javax.swing.JButton();
        jPanelRotate = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldRotate = new javax.swing.JTextField();
        jLabelRotateURL1 = new javax.swing.JLabel();
        jButtonConvertirRotate = new javax.swing.JButton();
        jLabel1RotateNbImg = new javax.swing.JLabel();
        jCheckBoxRotate = new javax.swing.JCheckBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListRotate = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jButtonRotateLister = new javax.swing.JButton();
        jLabelRotateInfos = new javax.swing.JLabel();
        jCheckBoxRotateAllSelect = new javax.swing.JCheckBox();
        jLabelFolder = new javax.swing.JLabel();
        jButtonOpenFolder = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Manuels Rapide");

        jTabbedPane2.setEnabled(false);

        jButtonConvertPdf2Img.setText("Convertir");
        jButtonConvertPdf2Img.setEnabled(false);
        jButtonConvertPdf2Img.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConvertPdf2ImgActionPerformed(evt);
            }
        });

        jLabel2.setText("Densité");

        jLabel3.setText("Attention traitement long !");

        jLabelPdf2imgNbImg.setText("Nombres d'images:");

        jLabel6.setForeground(new java.awt.Color(0, 153, 255));
        jLabel6.setText("Infos");
        jLabel6.setToolTipText("");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jFormattedTextFieldPdf2Img.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextFieldPdf2Img.setText("300");
        jFormattedTextFieldPdf2Img.setEnabled(false);

        javax.swing.GroupLayout jPanelPdf2ImagLayout = new javax.swing.GroupLayout(jPanelPdf2Imag);
        jPanelPdf2Imag.setLayout(jPanelPdf2ImagLayout);
        jPanelPdf2ImagLayout.setHorizontalGroup(
            jPanelPdf2ImagLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPdf2ImagLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPdf2ImagLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPdf2ImagLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabelPdf2imgNbImg)
                        .addGap(81, 81, 81))
                    .addGroup(jPanelPdf2ImagLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 496, Short.MAX_VALUE)
                        .addComponent(jButtonConvertPdf2Img)))
                .addContainerGap())
            .addGroup(jPanelPdf2ImagLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jFormattedTextFieldPdf2Img, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelPdf2ImagLayout.setVerticalGroup(
            jPanelPdf2ImagLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPdf2ImagLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanelPdf2ImagLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jFormattedTextFieldPdf2Img, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(jLabelPdf2imgNbImg)
                .addGap(18, 18, 18)
                .addGroup(jPanelPdf2ImagLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConvertPdf2Img)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Pdf2Img", jPanelPdf2Imag);

        jListRenameList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jListRenameListKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jListRenameList);

        jButtonConvertirRename.setText("Convertir");
        jButtonConvertirRename.setEnabled(false);
        jButtonConvertirRename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConvertirRenameActionPerformed(evt);
            }
        });

        jButtonRenameUp.setText("Up");
        jButtonRenameUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRenameUpActionPerformed(evt);
            }
        });

        jButtonRenameDown.setText("Down");
        jButtonRenameDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRenameDownActionPerformed(evt);
            }
        });

        jButtonRenameSuppr.setText("Suppr");
        jButtonRenameSuppr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRenameSupprActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(0, 153, 255));
        jLabel10.setText("Infos");
        jLabel10.setToolTipText("On peux appyer sur les fleches haut/bas pour monter/decendre un fichier\\n\nOn peux appuyer sur Page up/pagedown pour aller de 10 en 10\\n\nOn peux appyer sur suppr pour supprimer une ligne\n");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        jButtonRenameReset.setText("Reset");
        jButtonRenameReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRenameResetActionPerformed(evt);
            }
        });

        jLabelRenameNbImage1.setText("Nombres d'images:");

        javax.swing.GroupLayout jPanelRenameLayout = new javax.swing.GroupLayout(jPanelRename);
        jPanelRename.setLayout(jPanelRenameLayout);
        jPanelRenameLayout.setHorizontalGroup(
            jPanelRenameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRenameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelRenameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRenameLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanelRenameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelRenameLayout.createSequentialGroup()
                                .addGroup(jPanelRenameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRenameLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jButtonConvertirRename))
                                    .addGroup(jPanelRenameLayout.createSequentialGroup()
                                        .addComponent(jButtonRenameSuppr, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                            .addGroup(jPanelRenameLayout.createSequentialGroup()
                                .addComponent(jButtonRenameDown, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 309, Short.MAX_VALUE)
                                .addComponent(jLabelRenameNbImage1)
                                .addGap(82, 82, 82))
                            .addGroup(jPanelRenameLayout.createSequentialGroup()
                                .addComponent(jButtonRenameUp, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRenameLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRenameReset, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanelRenameLayout.setVerticalGroup(
            jPanelRenameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRenameLayout.createSequentialGroup()
                .addGroup(jPanelRenameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                    .addGroup(jPanelRenameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelRenameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonRenameSuppr)
                            .addComponent(jLabel10))
                        .addGap(74, 74, 74)
                        .addComponent(jButtonRenameReset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRenameUp)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelRenameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelRenameNbImage1)
                            .addComponent(jButtonRenameDown))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonConvertirRename)))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Rename", jPanelRename);

        jButtonConvertCrop.setText("Convertir");
        jButtonConvertCrop.setEnabled(false);
        jButtonConvertCrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConvertCropActionPerformed(evt);
            }
        });

        jTextFieldCrop1.setText("Auto");

        jLabel5.setText("Crop page 1");

        jLabelCropNbImg.setText("Nombres d'images:");

        jLabel8.setText("Crop page 2");

        jTextFieldCrop2.setText("Auto");

        jLabelCropinfoGeometryURL.setForeground(new java.awt.Color(0, 153, 255));
        jLabelCropinfoGeometryURL.setText("Infos");
        jLabelCropinfoGeometryURL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCropinfoGeometryURL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCropinfoGeometryURLMouseClicked(evt);
            }
        });

        jLabelCropInfos.setForeground(new java.awt.Color(0, 153, 255));
        jLabelCropInfos.setText("Infos");
        jLabelCropInfos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCropInfos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCropInfosMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jListCropAGarder);

        jButtonCropLister.setText("Lister");
        jButtonCropLister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCropListerActionPerformed(evt);
            }
        });

        jLabel1.setText("A garder");

        jScrollPane3.setViewportView(jListCropAExclure);

        jLabel4.setText("A exclure");

        jButtonCropToExclude.setText(">");
        jButtonCropToExclude.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCropToExcludeActionPerformed(evt);
            }
        });

        jButtonCropToInclude.setText("<");
        jButtonCropToInclude.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCropToIncludeActionPerformed(evt);
            }
        });

        jLabelCropInfosList.setForeground(new java.awt.Color(0, 153, 255));
        jLabelCropInfosList.setText("Infos");
        jLabelCropInfosList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelCropInfosList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCropInfosListMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelCropLayout = new javax.swing.GroupLayout(jPanelCrop);
        jPanelCrop.setLayout(jPanelCropLayout);
        jPanelCropLayout.setHorizontalGroup(
            jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCropLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCropLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(57, 57, 57)
                        .addComponent(jTextFieldCrop1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelCropinfoGeometryURL, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCropLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonCropToExclude)
                            .addComponent(jButtonCropToInclude))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelCropLayout.createSequentialGroup()
                            .addGap(64, 64, 64)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelCropLayout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(57, 57, 57)
                            .addComponent(jTextFieldCrop2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabelCropInfos, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCropLayout.createSequentialGroup()
                        .addGap(0, 192, Short.MAX_VALUE)
                        .addGroup(jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonConvertCrop, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCropLayout.createSequentialGroup()
                                .addComponent(jLabelCropNbImg)
                                .addGap(78, 78, 78))))
                    .addGroup(jPanelCropLayout.createSequentialGroup()
                        .addGroup(jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonCropLister)
                            .addComponent(jLabelCropInfosList, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCropLayout.createSequentialGroup()
                    .addContainerGap(745, Short.MAX_VALUE)
                    .addComponent(jLabelNbImageCrop, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(8, 8, 8)))
        );
        jPanelCropLayout.setVerticalGroup(
            jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCropLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldCrop1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCropinfoGeometryURL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldCrop2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCropInfos))
                .addGroup(jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCropLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCropLister)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelCropInfosList)
                        .addGap(104, 104, 104))
                    .addGroup(jPanelCropLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelCropLayout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jButtonCropToExclude)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonCropToInclude)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelCropLayout.createSequentialGroup()
                                .addGroup(jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                .addGroup(jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCropLayout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(jLabelCropNbImg)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonConvertCrop)
                                        .addContainerGap())
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
            .addGroup(jPanelCropLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelCropLayout.createSequentialGroup()
                    .addContainerGap(199, Short.MAX_VALUE)
                    .addComponent(jLabelNbImageCrop, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(67, 67, 67)))
        );

        jTabbedPane2.addTab("Crop", jPanelCrop);

        jButtonConvertImg2Pdf.setText("Convertir");
        jButtonConvertImg2Pdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConvertImg2PdfActionPerformed(evt);
            }
        });

        jLabelImg2PdfBDBelge.setForeground(new java.awt.Color(0, 153, 255));
        jLabelImg2PdfBDBelge.setText("Infos");
        jLabelImg2PdfBDBelge.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelImg2PdfBDBelge.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelImg2PdfBDBelgeMouseClicked(evt);
            }
        });

        buttonGroupImg2Pdf.add(jRadioButtonStendard);
        jRadioButtonStendard.setSelected(true);

        buttonGroupImg2Pdf.add(jRadioButtonOriginal);
        jRadioButtonOriginal.setText("Original");

        buttonGroupImg2Pdf.add(jRadioButtonBdBelge);
        jRadioButtonBdBelge.setText("Autre");

        jLabel18.setText("En pixel");

        jLabelImg2PdfOriginal.setForeground(new java.awt.Color(0, 153, 255));
        jLabelImg2PdfOriginal.setText("Infos");
        jLabelImg2PdfOriginal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelImg2PdfOriginal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelImg2PdfOriginalMouseClicked(evt);
            }
        });

        jLabelImg2Stendard.setForeground(new java.awt.Color(0, 153, 255));
        jLabelImg2Stendard.setText("Infos");
        jLabelImg2Stendard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelImg2Stendard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelImg2StendardMouseClicked(evt);
            }
        });

        jFormattedTextFieldImg2PdfHeight.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextFieldImg2PdfHeight.setText("1248");

        jFormattedTextFieldImg2PdfWidth.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextFieldImg2PdfWidth.setText("936");

        jLabelImg2PDFNbImg1.setText("Nombres d'images:");

        javax.swing.GroupLayout jPanelimg2PdfLayout = new javax.swing.GroupLayout(jPanelimg2Pdf);
        jPanelimg2Pdf.setLayout(jPanelimg2PdfLayout);
        jPanelimg2PdfLayout.setHorizontalGroup(
            jPanelimg2PdfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelimg2PdfLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelimg2PdfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelimg2PdfLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonConvertImg2Pdf)
                        .addContainerGap())
                    .addGroup(jPanelimg2PdfLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanelimg2PdfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelimg2PdfLayout.createSequentialGroup()
                                .addGroup(jPanelimg2PdfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonOriginal)
                                    .addGroup(jPanelimg2PdfLayout.createSequentialGroup()
                                        .addComponent(jRadioButtonBdBelge)
                                        .addGap(18, 18, 18)
                                        .addComponent(jFormattedTextFieldImg2PdfWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jFormattedTextFieldImg2PdfHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel18))
                            .addGroup(jPanelimg2PdfLayout.createSequentialGroup()
                                .addComponent(jRadioButtonStendard)
                                .addGap(51, 51, 51)
                                .addComponent(jComboBoxImg2PdfPageSize, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelimg2PdfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelImg2PdfOriginal, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelImg2PdfBDBelge, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelImg2Stendard, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(364, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelimg2PdfLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelImg2PDFNbImg1)
                .addGap(84, 84, 84))
        );
        jPanelimg2PdfLayout.setVerticalGroup(
            jPanelimg2PdfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelimg2PdfLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanelimg2PdfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonStendard, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelimg2PdfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBoxImg2PdfPageSize, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelImg2Stendard)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelimg2PdfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelImg2PdfOriginal)
                    .addComponent(jRadioButtonOriginal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelimg2PdfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonBdBelge)
                    .addComponent(jLabel18)
                    .addComponent(jLabelImg2PdfBDBelge)
                    .addComponent(jFormattedTextFieldImg2PdfWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldImg2PdfHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addComponent(jLabelImg2PDFNbImg1)
                .addGap(18, 18, 18)
                .addComponent(jButtonConvertImg2Pdf)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Img2Pdf", jPanelimg2Pdf);

        jLabel16.setText("Nouvelle taille:");

        jTextFieldResizeText.setText("50%");

        jLabelResizenfoURL1.setForeground(new java.awt.Color(0, 153, 255));
        jLabelResizenfoURL1.setText("Infos1");
        jLabelResizenfoURL1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelResizenfoURL1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelResizenfoURL1MouseClicked(evt);
            }
        });

        jButtonConvertirResize.setText("Convertir");
        jButtonConvertirResize.setEnabled(false);
        jButtonConvertirResize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConvertirResizeActionPerformed(evt);
            }
        });

        jLabel1ConvertNbImage.setText("Nombres d'images:");

        jCheckBoxResize.setText("Ecraser les fichiers originaux ?");

        jLabelResizenfoURL2.setForeground(new java.awt.Color(0, 153, 255));
        jLabelResizenfoURL2.setText("Infos2");
        jLabelResizenfoURL2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelResizenfoURL2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelResizenfoURL2MouseClicked(evt);
            }
        });

        jLabel9.setText("A convertir");

        jListRotate.setModel(new DefaultListModel<String>());
        jScrollPane5.setViewportView(jListResize);

        jButtonResizeLister1.setText("Lister");
        jButtonResizeLister1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResizeLister1ActionPerformed(evt);
            }
        });

        jLabelResizeInfos.setForeground(new java.awt.Color(0, 153, 255));
        jLabelResizeInfos.setText("Infos");
        jLabelResizeInfos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelResizeInfos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelResizeInfosMouseClicked(evt);
            }
        });

        jCheckBoxResizeAllSelect.setText("Tout sélectionner");
        jCheckBoxResizeAllSelect.setEnabled(false);
        jCheckBoxResizeAllSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxResizeAllSelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelResizeLayout = new javax.swing.GroupLayout(jPanelResize);
        jPanelResize.setLayout(jPanelResizeLayout);
        jPanelResizeLayout.setHorizontalGroup(
            jPanelResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResizeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelResizeLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldResizeText, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(jPanelResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelResizenfoURL2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelResizenfoURL1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelResizeLayout.createSequentialGroup()
                        .addComponent(jCheckBoxResize)
                        .addGroup(jPanelResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelResizeLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanelResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonResizeLister1)
                                    .addComponent(jLabelResizeInfos)
                                    .addComponent(jCheckBoxResizeAllSelect))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelResizeLayout.createSequentialGroup()
                                        .addComponent(jButtonConvertirResize)
                                        .addContainerGap())
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelResizeLayout.createSequentialGroup()
                                        .addComponent(jLabel1ConvertNbImage)
                                        .addGap(85, 85, 85))))
                            .addGroup(jPanelResizeLayout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        jPanelResizeLayout.setVerticalGroup(
            jPanelResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResizeLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanelResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextFieldResizeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelResizenfoURL1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelResizenfoURL2)
                .addGroup(jPanelResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelResizeLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jCheckBoxResize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1ConvertNbImage)
                        .addGap(11, 11, 11)
                        .addComponent(jButtonConvertirResize)
                        .addContainerGap())
                    .addGroup(jPanelResizeLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelResizeLayout.createSequentialGroup()
                                .addComponent(jButtonResizeLister1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelResizeInfos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBoxResizeAllSelect)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTabbedPane2.addTab("Resize", jPanelResize);

        jLabel13.setText("Quel extention convertir ?");

        jTextFieldConvertExt.setText(".png");

        jLabel14.setForeground(new java.awt.Color(0, 153, 255));
        jLabel14.setText("Infos");
        jLabel14.setToolTipText("");
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        jButtonConvertireConvert.setText("Convertir");
        jButtonConvertireConvert.setEnabled(false);
        jButtonConvertireConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConvertireConvertActionPerformed(evt);
            }
        });

        jLabelConvertNbImg.setText("Nombres d'images:");

        jCheckBoxConvertgrayscale.setText("GrayScale ?");

        jLabel12.setText("A garder");

        jLabel15.setText("A exclure");

        jScrollPane6.setViewportView(jListConvertAExclure1);

        jButtonConcertToExclude1.setText(">");
        jButtonConcertToExclude1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConcertToExclude1ActionPerformed(evt);
            }
        });

        jButtonConvertToInclude1.setText("<");
        jButtonConvertToInclude1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConvertToInclude1ActionPerformed(evt);
            }
        });

        jScrollPane7.setViewportView(jListConvertAGarder1);

        jButtonConvertLister1.setText("Lister");
        jButtonConvertLister1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConvertLister1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelConvertLayout = new javax.swing.GroupLayout(jPanelConvert);
        jPanelConvert.setLayout(jPanelConvertLayout);
        jPanelConvertLayout.setHorizontalGroup(
            jPanelConvertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConvertLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConvertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConvertLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldConvertExt, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel14)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelConvertLayout.createSequentialGroup()
                        .addComponent(jCheckBoxConvertgrayscale)
                        .addGap(32, 32, 32)
                        .addGroup(jPanelConvertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelConvertLayout.createSequentialGroup()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanelConvertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonConcertToExclude1)
                                    .addComponent(jButtonConvertToInclude1))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelConvertLayout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jLabel12)
                                .addGap(191, 191, 191)
                                .addComponent(jLabel15)))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonConvertLister1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelConvertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConvertLayout.createSequentialGroup()
                                .addComponent(jButtonConvertireConvert)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConvertLayout.createSequentialGroup()
                                .addComponent(jLabelConvertNbImg)
                                .addGap(84, 84, 84))))))
        );
        jPanelConvertLayout.setVerticalGroup(
            jPanelConvertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConvertLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanelConvertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextFieldConvertExt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(29, 29, 29)
                .addGroup(jPanelConvertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConvertLayout.createSequentialGroup()
                        .addComponent(jCheckBoxConvertgrayscale)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelConvertNbImg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonConvertireConvert))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConvertLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonConvertLister1)
                        .addGap(132, 132, 132))
                    .addGroup(jPanelConvertLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jButtonConcertToExclude1)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonConvertToInclude1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelConvertLayout.createSequentialGroup()
                        .addGroup(jPanelConvertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(jPanelConvertLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Convert", jPanelConvert);

        jLabel11.setText("Rotation");

        jTextFieldRotate.setText("90");

        jLabelRotateURL1.setForeground(new java.awt.Color(0, 153, 255));
        jLabelRotateURL1.setText("Infos");
        jLabelRotateURL1.setToolTipText("");
        jLabelRotateURL1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRotateURL1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRotateURL1MouseClicked(evt);
            }
        });

        jButtonConvertirRotate.setText("Convertir");
        jButtonConvertirRotate.setEnabled(false);
        jButtonConvertirRotate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConvertirRotateActionPerformed(evt);
            }
        });

        jLabel1RotateNbImg.setText("Nombres d'images:");

        jCheckBoxRotate.setText("Ecraser les fichiers originaux ?");

        jListRotate.setModel(new DefaultListModel<String>());
        jScrollPane4.setViewportView(jListRotate);

        jLabel7.setText("A convertir");

        jButtonRotateLister.setText("Lister");
        jButtonRotateLister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRotateListerActionPerformed(evt);
            }
        });

        jLabelRotateInfos.setForeground(new java.awt.Color(0, 153, 255));
        jLabelRotateInfos.setText("Infos");
        jLabelRotateInfos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRotateInfos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRotateInfosMouseClicked(evt);
            }
        });

        jCheckBoxRotateAllSelect.setText("Tout sélectionner");
        jCheckBoxRotateAllSelect.setEnabled(false);
        jCheckBoxRotateAllSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxRotateAllSelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelRotateLayout = new javax.swing.GroupLayout(jPanelRotate);
        jPanelRotate.setLayout(jPanelRotateLayout);
        jPanelRotateLayout.setHorizontalGroup(
            jPanelRotateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRotateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRotateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRotateLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldRotate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBoxRotate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRotateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRotateLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelRotateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonRotateLister)
                            .addComponent(jLabelRotateInfos)
                            .addComponent(jCheckBoxRotateAllSelect)))
                    .addGroup(jPanelRotateLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanelRotateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelRotateURL1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addGroup(jPanelRotateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonConvertirRotate, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRotateLayout.createSequentialGroup()
                        .addComponent(jLabel1RotateNbImg)
                        .addGap(78, 78, 78)))
                .addContainerGap())
        );
        jPanelRotateLayout.setVerticalGroup(
            jPanelRotateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRotateLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanelRotateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextFieldRotate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRotateURL1))
                .addGap(18, 18, 18)
                .addGroup(jPanelRotateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRotateLayout.createSequentialGroup()
                        .addComponent(jCheckBoxRotate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                        .addComponent(jLabel1RotateNbImg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonConvertirRotate))
                    .addGroup(jPanelRotateLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelRotateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelRotateLayout.createSequentialGroup()
                                .addComponent(jButtonRotateLister)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelRotateInfos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBoxRotateAllSelect)))))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Rotate", jPanelRotate);

        jLabelFolder.setText("Repertoire");

        jButtonOpenFolder.setText("Ouvrir");
        jButtonOpenFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenFolderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelFolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonOpenFolder)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFolder)
                    .addComponent(jButtonOpenFolder))
                .addGap(12, 12, 12)
                .addComponent(jTabbedPane2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOpenFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenFolderActionPerformed
        JFileChooser fc = new JFileChooser(config.lastFolder);
        fc.setDialogType(JFileChooser.OPEN_DIALOG);
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int res = fc.showDialog(this, "Ouvrir");
        if (res == JFileChooser.APPROVE_OPTION) {
            folder = fc.getSelectedFile();
            jLabelFolder.setText("Répertoire: " + folder.getAbsolutePath());
            jTabbedPane2.setEnabled(true);
            jButtonConvertPdf2Img.setEnabled(true);
            jFormattedTextFieldPdf2Img.setEnabled(true);
            config.lastFolder = folder.getAbsolutePath();
            saveConfig();
        }
    }//GEN-LAST:event_jButtonOpenFolderActionPerformed

    private void jButtonRenameResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRenameResetActionPerformed
        File files[] = getFiles(folder, null);
        DefaultListModel<String> model = new DefaultListModel<>();
        for (File file : files) {
            model.addElement(file.getName());
        }
        jListRenameList.setModel(model);
        if (model.size() > 0) {
            resetList = true;
            jButtonConvertirRename.setEnabled(true);
        }
    }//GEN-LAST:event_jButtonRenameResetActionPerformed

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        JOptionPane.showMessageDialog(this, "Permet de renommer les fichier en 00.jpg 01.jpg etc... dans l'ordre de la liste.\nC'est pour ca qu'on peux bouger les lignes de la liste\n\nOn peux appyer sur les fleches haut/bas pour monter/decendre une ligne\nOn peux appyer sur suppr pour supprimer une ligne\nMaintenir la touche 'controle' pour sélectionner plusieurs lignes");
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jButtonRenameSupprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRenameSupprActionPerformed
        java.awt.event.KeyEvent ke = new java.awt.event.KeyEvent(this, 0, 0, 0, KeyEvent.VK_DELETE, 's');
        jListRenameListKeyPressed(ke);
    }//GEN-LAST:event_jButtonRenameSupprActionPerformed

    private void jButtonRenameDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRenameDownActionPerformed
        java.awt.event.KeyEvent ke = new java.awt.event.KeyEvent(this, -1, 0, 0, KeyEvent.VK_DOWN, 'd');
        jListRenameListKeyPressed(ke);
    }//GEN-LAST:event_jButtonRenameDownActionPerformed

    private void jButtonRenameUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRenameUpActionPerformed
        java.awt.event.KeyEvent ke = new java.awt.event.KeyEvent(this, -1, 0, 0, KeyEvent.VK_UP, 'u');
        jListRenameListKeyPressed(ke);
    }//GEN-LAST:event_jButtonRenameUpActionPerformed

    private void jButtonConvertirRenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConvertirRenameActionPerformed
        DefaultListModel<String> model = (DefaultListModel<String>) jListRenameList.getModel();
        if (model == null || model.size() <= 0) {
            return;
        }
        int len = model.size();
        int j = -1;
        while (len > 0) {
            len /= 10;
            j++;
        }
        for (int i = 0; i < model.size(); i++) {
            if (i == 10) {
                j--;
            }
            if (i == 100) {
                j--;
            }
            if (i == 1000) {
                j--;
            }
            String nb0 = "";
            for (int x = j; x > 0; x--) {
                nb0 += "0";
            }
            String name = model.get(i);
            int pos = name.lastIndexOf('.');
            String extention = name.substring(pos);
            String imgName = nb0 + i + extention;
            File originFile = new File(folder, name);
            File newFile = new File(folder, imgName);
            originFile.renameTo(newFile);
        }
        jLabelRenameNbImage1.setText("Nombres d'images: " + model.getSize() + "/" + model.getSize());
    }//GEN-LAST:event_jButtonConvertirRenameActionPerformed

    private void jListRenameListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jListRenameListKeyPressed
        if (!resetList || jListRenameList.getModel().getSize() <= 0) {
            return;
        }
        DefaultListModel<String> model = (DefaultListModel<String>) jListRenameList.getModel();
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            if (jListRenameList.getSelectedIndex() == 0 || jListRenameList.getSelectedIndices().length == 0) {
                return;
            }
            int indicies[] = jListRenameList.getSelectedIndices();
            if (indicies[0] == 0) {
                evt.consume();
                return;
            }
            String firstStr = model.get(indicies[0] - 1);
            for (int i = 0; i < indicies.length; i++) {
                String tmp = model.getElementAt(indicies[i]);
                model.setElementAt(tmp, indicies[i] - 1);
            }
            model.setElementAt(firstStr, indicies[indicies.length - 1]);
            for (int i = 0; i < indicies.length; i++) {
                indicies[i]--;
            }
            jListRenameList.ensureIndexIsVisible(indicies[0]);
            jListRenameList.setSelectedIndices(indicies);
            evt.consume();

        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            if (jListRenameList.getSelectedIndex() == (model.getSize() - 1) || jListRenameList.getSelectedIndices().length == 0) {
                return;
            }
            int indicies[] = jListRenameList.getSelectedIndices();
            if (indicies[indicies.length - 1] == model.getSize() - 1) {
                evt.consume();
                return;
            }
            String firstStr = model.get(indicies[indicies.length - 1] + 1);
            for (int i = indicies.length - 1; i > -1; i--) {
                String tmp = model.getElementAt(indicies[i]);
                model.setElementAt(tmp, indicies[i] + 1);
            }
            model.setElementAt(firstStr, indicies[0]);
            jListRenameList.ensureIndexIsVisible(indicies[indicies.length - 1]);
            for (int i = 0; i < indicies.length; i++) {
                indicies[i]++;
            }
            jListRenameList.setSelectedIndices(indicies);
            evt.consume();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            if ((model.getSize() - 1) <= 0) {
                return;
            }
            int res = jListRenameList.getSelectedIndex() - 1;
            if (res < 0) {
                res = 0;
            }
            model.remove(jListRenameList.getSelectedIndex());
            jListRenameList.setSelectedIndex(res);
        }
    }//GEN-LAST:event_jListRenameListKeyPressed

    private void jButtonConvertirResizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConvertirResizeActionPerformed
        File resizeFolder = new File(folder, "resize");
        resizeFolder.mkdirs();
        int indices[] = jListResize.getSelectedIndices();
        for (int i = 0; i < indices.length; i++) {
            File file = new File(folder, jListResize.getModel().getElementAt(indices[i]));
            try {
                File result = magick.launchResize(file, jTextFieldResizeText.getText());
                if (jCheckBoxResize.isSelected()) {
                    FileUtils.delete(file);
                    FileUtils.moveFile(result, file);
                }
            } catch (Exception ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (jCheckBoxResize.isSelected()) {
            try {
                FileUtils.deleteDirectory(resizeFolder);
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        jLabel1ConvertNbImage.setText("Nombres d'images: " + indices.length + "/" + indices.length);
    }//GEN-LAST:event_jButtonConvertirResizeActionPerformed

    private void jLabelResizenfoURL1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelResizenfoURL1MouseClicked
        String url = "https://imagemagick.org/script/command-line-processing.php#geometry";
        openURL(url);
    }//GEN-LAST:event_jLabelResizenfoURL1MouseClicked

    private void jButtonConvertireConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConvertireConvertActionPerformed
        String ext = jTextFieldConvertExt.getText().trim().toLowerCase();
        if (!ext.startsWith(".")) {
            jTextFieldConvertExt.setText("." + ext);
        }
        DefaultListModel<String> model = (DefaultListModel<String>) jListConvertAGarder1.getModel();
        Iterator<String> it = model.elements().asIterator();
        int i = 0;
        while (it.hasNext()) {
            File file = new File(folder, it.next());
            File originalFolder = new File(folder, "originals");
            originalFolder.mkdirs();
            try {
                i++;
                magick.launchConvertInm(file, ".jpg", jCheckBoxConvertgrayscale.isSelected());
                if (!ext.equals(".jpg")) {
                    FileUtils.moveFileToDirectory(file, originalFolder, true);
                }
            } catch (Exception ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        jLabelConvertNbImg.setText("Nombres d'images: " + i + "/" + model.size());
    }//GEN-LAST:event_jButtonConvertireConvertActionPerformed

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        JOptionPane.showMessageDialog(this, "La sortie serra toujours en .jpg");
    }//GEN-LAST:event_jLabel14MouseClicked

    private void jButtonConvertirRotateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConvertirRotateActionPerformed
        File rotateFolder = new File(folder, "rotate");
        rotateFolder.mkdirs();
        int indices[] = jListRotate.getSelectedIndices();
        for (int i = 0; i < indices.length; i++) {
            File file = new File(folder, jListRotate.getModel().getElementAt(indices[i]));
            String result = null;
            try {
                result = magick.laumchRotateMagik(file, jTextFieldRotate.getText());
            } catch (Exception ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (jCheckBoxRotate.isSelected() && result != null) {
                File f = new File(result);
                try {
                    FileUtils.delete(file);
                    FileUtils.moveFile(f, file);
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        if (jCheckBoxRotate.isSelected()) {
            try {
                FileUtils.deleteDirectory(rotateFolder);
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        jLabel1RotateNbImg.setText("Nombres d'images: " + indices.length + "/" + indices.length);
    }//GEN-LAST:event_jButtonConvertirRotateActionPerformed

    private void jLabelRotateURL1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRotateURL1MouseClicked
        JOptionPane.showMessageDialog(this, "Mettre (en degrés) la rotation.\nPeux etre négatif\n\nExemple: 90 ou -90\nPrends que des .jpg");
    }//GEN-LAST:event_jLabelRotateURL1MouseClicked

    private void jLabelImg2StendardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelImg2StendardMouseClicked
        JOptionPane.showMessageDialog(this, "Si l'un des nom d'une image contient \"paysage\" (exemple: 01-paysage.jpg) elle serra au format paysage dans le rendu du PDF final");
    }//GEN-LAST:event_jLabelImg2StendardMouseClicked

    private void jLabelImg2PdfOriginalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelImg2PdfOriginalMouseClicked
        JOptionPane.showMessageDialog(this, "Mets la taille original des images dans le PDF (faites un resize avant !)\nPratique quand les formats ne sont pas standards\nSi l'un des nom d'une image contient \"paysage\" (exemple: 01-paysage.jpg) elle serra au format paysage dans le rendu du PDF final");
    }//GEN-LAST:event_jLabelImg2PdfOriginalMouseClicked

    private void jLabelImg2PdfBDBelgeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelImg2PdfBDBelgeMouseClicked
        JOptionPane.showMessageDialog(this, "la taille proposé de base (936x1248) c'est la taille 24cmx32cm soit le format d'une BD (belge)\nCela permet de forcer une taille si l'on ne veux pas de la taille original\nSi l'un des nom d'une image contient \"paysage\" (exemple: 01-paysage.jpg) elle serra au format paysage dans le rendu du PDF final", "Info", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabelImg2PdfBDBelgeMouseClicked

    private void jButtonConvertImg2PdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConvertImg2PdfActionPerformed
        File files[] = getFiles(folder, ".jpg");
        PageSize pg = null;
        try {
            if (jRadioButtonOriginal.isSelected()) {
                Image image = new Image(ImageDataFactory.create(files[0].getAbsolutePath()));
                pg = new PageSize(image.getImageWidth() / 4, image.getImageHeight() / 4);
            } else if (jRadioButtonStendard.isSelected()) {
                String resStr = jComboBoxImg2PdfPageSize.getSelectedItem().toString();
                Field f = PageSize.class.getField(resStr);
                pg = (PageSize) f.get(null);
            } else {
                pg = new PageSize(Float.parseFloat(jFormattedTextFieldImg2PdfWidth.getText()), Float.parseFloat(jFormattedTextFieldImg2PdfHeight.getText()));
            }
            magick.launchImg2Pdf(files, pg);
            jLabelImg2PDFNbImg1.setText("Nombres d'images: " + files.length);
        } catch (Exception ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonConvertImg2PdfActionPerformed

    private void jLabelCropInfosListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCropInfosListMouseClicked
        JOptionPane.showMessageDialog(this, "Maintenir shift pour selectionner plusieurs lignes");
    }//GEN-LAST:event_jLabelCropInfosListMouseClicked

    private void jButtonCropToIncludeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCropToIncludeActionPerformed
        DefaultListModel<String> modelGarde = (DefaultListModel<String>) jListCropAGarder.getModel();
        DefaultListModel<String> modelExclude = (DefaultListModel<String>) jListCropAExclure.getModel();
        int indices[] = jListCropAExclure.getSelectedIndices();
        for (int i = 0; i < indices.length; i++) {
            String value = modelExclude.get(indices[i]);
            modelGarde.addElement(value);
        }
        for (int i = (indices.length - 1); i > -1; i--) {
            modelExclude.removeElementAt(indices[i]);
        }
    }//GEN-LAST:event_jButtonCropToIncludeActionPerformed

    private void jButtonCropToExcludeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCropToExcludeActionPerformed
        DefaultListModel<String> modelGarde = (DefaultListModel<String>) jListCropAGarder.getModel();
        DefaultListModel<String> modelExclude = (DefaultListModel<String>) jListCropAExclure.getModel();
        int indices[] = jListCropAGarder.getSelectedIndices();
        for (int i = 0; i < indices.length; i++) {
            String value = modelGarde.get(indices[i]);
            modelExclude.addElement(value);
        }
        for (int i = (indices.length - 1); i > -1; i--) {
            modelGarde.removeElementAt(indices[i]);
        }
    }//GEN-LAST:event_jButtonCropToExcludeActionPerformed

    private void jButtonCropListerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCropListerActionPerformed
        File files[] = getFiles(folder, null);
        DefaultListModel<String> model = new DefaultListModel<>();
        for (File file : files) {
            model.addElement(file.getName());
        }
        jListCropAGarder.setModel(model);
        jListCropAExclure.setModel(new DefaultListModel<>());
        if (model.size() > 0) {
            jButtonConvertCrop.setEnabled(true);
        }
    }//GEN-LAST:event_jButtonCropListerActionPerformed

    private void jLabelCropInfosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCropInfosMouseClicked
        JOptionPane.showMessageDialog(this, "En Mode Auto, ca coupe au milieu de l'image.\nSinon il faut mettre une largeure x hauteur (voir \"info sur le templates (geometry) \")\nIl vaut mieux laisser en Auto !", "Info", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabelCropInfosMouseClicked

    private void jLabelCropinfoGeometryURLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCropinfoGeometryURLMouseClicked
        String url = "https://imagemagick.org/script/command-line-processing.php#geometry";
        openURL(url);
    }//GEN-LAST:event_jLabelCropinfoGeometryURLMouseClicked

    private void jButtonConvertCropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConvertCropActionPerformed
        new File(folder, "originals").mkdirs();
        DefaultListModel<String> model = (DefaultListModel<String>) jListCropAGarder.getModel();
        boolean auto1 = jTextFieldCrop1.getText().contains("Auto");
        boolean auto2 = jTextFieldCrop2.getText().contains("Auto");
        String crop1 = "";
        String crop2 = "";
        Iterator<String> it = model.elements().asIterator();
        int i = 0;
        while (it.hasNext()) {
            File file = new File(folder, it.next());
            try {
                BufferedImage img = ImageIO.read(file);

                int h = img.getHeight();
                int w = img.getWidth();
                if (auto1) {
                    crop1 = w / 2 + "x" + h + "-0-0";
                } else {
                    crop1 = jTextFieldCrop1.getText();
                }
                if (auto2) {
                    crop2 = w / 2 + "x" + h + "+" + w / 2 + "-0";
                } else {
                    crop2 = jTextFieldCrop2.getText();
                }

                magick.laumchCropMagik(file, crop1, 1);
                magick.laumchCropMagik(file, crop2, 2);

                String filename = file.getParentFile().getAbsolutePath() + "/originals/" + file.getName();
                FileUtils.moveFile(file, new File(filename));

                i += 2;
                jLabelCropNbImg.setText("Nombres d'images: " + i + "/" + (model.size() * 2));
            } catch (Exception ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonConvertCropActionPerformed

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        JOptionPane.showMessageDialog(this, "Plus la densité est grande plus la taille du fichier serra grand et lourd.\n\n300 est un tres bon compromis entre qualité / poids / taille", "Info", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jButtonConvertPdf2ImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConvertPdf2ImgActionPerformed
        File pdfs[] = getFiles(folder, ".pdf");
        if (pdfs.length == 0) {
            JOptionPane.showMessageDialog(this, "Pas de pdf trouver dans le repertoire choisi", "Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        }
        File pdf = pdfs[0];

        try {
            magick.launchPdf2Img(pdf, jFormattedTextFieldPdf2Img.getText());
        } catch (Exception ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        moveFileToFolder(pdf, "originals");
        File jpgs[] = getFiles(folder, ".jpg");
        jLabelPdf2imgNbImg.setText("Nombres d'images: " + jpgs.length);
    }//GEN-LAST:event_jButtonConvertPdf2ImgActionPerformed

    private void jLabelResizenfoURL2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelResizenfoURL2MouseClicked
        JOptionPane.showMessageDialog(this, "Resize que des .jpg");
    }//GEN-LAST:event_jLabelResizenfoURL2MouseClicked

    private void jLabelRotateInfosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRotateInfosMouseClicked
        JOptionPane.showMessageDialog(this, "maintenir shift pour en selectionner plusieurs");
    }//GEN-LAST:event_jLabelRotateInfosMouseClicked

    private void jCheckBoxRotateAllSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxRotateAllSelectActionPerformed
        if (jListRotate.getModel().getSize() <= 0) {
            return;
        }
        int selctions[] = new int[jListRotate.getModel().getSize()];
        for (int i = 0; i < selctions.length; i++) {
            selctions[i] = i;
        }
        jListRotate.setSelectedIndices(selctions);
        jListRotate.setEnabled(!jCheckBoxRotateAllSelect.isSelected());
    }//GEN-LAST:event_jCheckBoxRotateAllSelectActionPerformed

    private void jButtonRotateListerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRotateListerActionPerformed
        File files[] = getFiles(folder, null);
        DefaultListModel<String> model = new DefaultListModel<>();
        for (File file : files) {
            model.addElement(file.getName());
        }
        jListRotate.setModel(model);
        if (model.size() > 0) {
            jButtonConvertirRotate.setEnabled(true);
            jCheckBoxRotateAllSelect.setEnabled(true);
        }
    }//GEN-LAST:event_jButtonRotateListerActionPerformed

    private void jButtonResizeLister1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResizeLister1ActionPerformed
        File files[] = getFiles(folder, ".jpg");
        DefaultListModel<String> model = new DefaultListModel<>();
        for (File file : files) {
            model.addElement(file.getName());
        }
        jListResize.setModel(model);
        if (model.size() > 0) {
            jButtonConvertirResize.setEnabled(true);
            jCheckBoxResizeAllSelect.setEnabled(true);
        }
    }//GEN-LAST:event_jButtonResizeLister1ActionPerformed

    private void jLabelResizeInfosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelResizeInfosMouseClicked
        this.jLabelRotateInfosMouseClicked(evt);
    }//GEN-LAST:event_jLabelResizeInfosMouseClicked

    private void jCheckBoxResizeAllSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxResizeAllSelectActionPerformed
        if (jListResize.getModel().getSize() <= 0) {
            return;
        }
        int selctions[] = new int[jListResize.getModel().getSize()];
        for (int i = 0; i < selctions.length; i++) {
            selctions[i] = i;
        }
        jListResize.setSelectedIndices(selctions);
        jListResize.setEnabled(!jCheckBoxResizeAllSelect.isSelected());
    }//GEN-LAST:event_jCheckBoxResizeAllSelectActionPerformed

    private void jButtonConcertToExclude1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConcertToExclude1ActionPerformed
        DefaultListModel<String> modelGarde = (DefaultListModel<String>) jListConvertAGarder1.getModel();
        DefaultListModel<String> modelExclude = (DefaultListModel<String>) jListConvertAExclure1.getModel();
        int indices[] = jListConvertAGarder1.getSelectedIndices();
        for (int i = 0; i < indices.length; i++) {
            String value = modelGarde.get(indices[i]);
            modelExclude.addElement(value);
        }
        for (int i = (indices.length - 1); i > -1; i--) {
            modelGarde.removeElementAt(indices[i]);
        }
    }//GEN-LAST:event_jButtonConcertToExclude1ActionPerformed

    private void jButtonConvertToInclude1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConvertToInclude1ActionPerformed
        DefaultListModel<String> modelGarde = (DefaultListModel<String>) jListConvertAGarder1.getModel();
        DefaultListModel<String> modelExclude = (DefaultListModel<String>) jListConvertAExclure1.getModel();
        int indices[] = jListConvertAExclure1.getSelectedIndices();
        for (int i = 0; i < indices.length; i++) {
            String value = modelExclude.get(indices[i]);
            modelGarde.addElement(value);
        }
        for (int i = (indices.length - 1); i > -1; i--) {
            modelExclude.removeElementAt(indices[i]);
        }
    }//GEN-LAST:event_jButtonConvertToInclude1ActionPerformed

    private void jButtonConvertLister1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConvertLister1ActionPerformed
        File files[] = getFiles(folder, jTextFieldConvertExt.getText());
        DefaultListModel<String> model = new DefaultListModel<>();
        for (File file : files) {
            model.addElement(file.getName());
        }
        jListConvertAGarder1.setModel(model);
        jListConvertAExclure1.setModel(new DefaultListModel<>());
        if (model.size() > 0) {
            jButtonConvertireConvert.setEnabled(true);
        }
    }//GEN-LAST:event_jButtonConvertLister1ActionPerformed

    private boolean resetList = false;

    private void openURL(String url) {
        Desktop desktop = java.awt.Desktop.getDesktop();
        try {
            desktop.browse(new URI(url));
        } catch (Exception ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private File[] getFiles(File folder, String ext) {
        File files[] = null;
        if (ext != null) {
            files = folder.listFiles((File pathname) -> pathname.getName().endsWith(ext));
        } else {
            files = folder.listFiles((File pathname) -> pathname.isFile());
        }
        Arrays.sort(files, Comparator.comparing(File::getName));
        return files;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupImg2Pdf;
    private javax.swing.JButton jButtonConcertToExclude1;
    private javax.swing.JButton jButtonConvertCrop;
    private javax.swing.JButton jButtonConvertImg2Pdf;
    private javax.swing.JButton jButtonConvertLister1;
    private javax.swing.JButton jButtonConvertPdf2Img;
    private javax.swing.JButton jButtonConvertToInclude1;
    private javax.swing.JButton jButtonConvertirRename;
    private javax.swing.JButton jButtonConvertirResize;
    private javax.swing.JButton jButtonConvertirRotate;
    private javax.swing.JButton jButtonConvertireConvert;
    private javax.swing.JButton jButtonCropLister;
    private javax.swing.JButton jButtonCropToExclude;
    private javax.swing.JButton jButtonCropToInclude;
    private javax.swing.JButton jButtonOpenFolder;
    private javax.swing.JButton jButtonRenameDown;
    private javax.swing.JButton jButtonRenameReset;
    private javax.swing.JButton jButtonRenameSuppr;
    private javax.swing.JButton jButtonRenameUp;
    private javax.swing.JButton jButtonResizeLister1;
    private javax.swing.JButton jButtonRotateLister;
    private javax.swing.JCheckBox jCheckBoxConvertgrayscale;
    private javax.swing.JCheckBox jCheckBoxResize;
    private javax.swing.JCheckBox jCheckBoxResizeAllSelect;
    private javax.swing.JCheckBox jCheckBoxRotate;
    private javax.swing.JCheckBox jCheckBoxRotateAllSelect;
    private javax.swing.JComboBox<String> jComboBoxImg2PdfPageSize;
    private javax.swing.JFormattedTextField jFormattedTextFieldImg2PdfHeight;
    private javax.swing.JFormattedTextField jFormattedTextFieldImg2PdfWidth;
    private javax.swing.JFormattedTextField jFormattedTextFieldPdf2Img;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel1ConvertNbImage;
    private javax.swing.JLabel jLabel1RotateNbImg;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelConvertNbImg;
    private javax.swing.JLabel jLabelCropInfos;
    private javax.swing.JLabel jLabelCropInfosList;
    private javax.swing.JLabel jLabelCropNbImg;
    private javax.swing.JLabel jLabelCropinfoGeometryURL;
    private javax.swing.JLabel jLabelFolder;
    private javax.swing.JLabel jLabelImg2PDFNbImg1;
    private javax.swing.JLabel jLabelImg2PdfBDBelge;
    private javax.swing.JLabel jLabelImg2PdfOriginal;
    private javax.swing.JLabel jLabelImg2Stendard;
    private javax.swing.JLabel jLabelNbImageCrop;
    private javax.swing.JLabel jLabelPdf2imgNbImg;
    private javax.swing.JLabel jLabelRenameNbImage1;
    private javax.swing.JLabel jLabelResizeInfos;
    private javax.swing.JLabel jLabelResizenfoURL1;
    private javax.swing.JLabel jLabelResizenfoURL2;
    private javax.swing.JLabel jLabelRotateInfos;
    private javax.swing.JLabel jLabelRotateURL1;
    private javax.swing.JList<String> jListConvertAExclure1;
    private javax.swing.JList<String> jListConvertAGarder1;
    private javax.swing.JList<String> jListCropAExclure;
    private javax.swing.JList<String> jListCropAGarder;
    private javax.swing.JList<String> jListRenameList;
    private javax.swing.JList<String> jListResize;
    private javax.swing.JList<String> jListRotate;
    private javax.swing.JPanel jPanelConvert;
    private javax.swing.JPanel jPanelCrop;
    private javax.swing.JPanel jPanelPdf2Imag;
    private javax.swing.JPanel jPanelRename;
    private javax.swing.JPanel jPanelResize;
    private javax.swing.JPanel jPanelRotate;
    private javax.swing.JPanel jPanelimg2Pdf;
    private javax.swing.JRadioButton jRadioButtonBdBelge;
    private javax.swing.JRadioButton jRadioButtonOriginal;
    private javax.swing.JRadioButton jRadioButtonStendard;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextFieldConvertExt;
    private javax.swing.JTextField jTextFieldCrop1;
    private javax.swing.JTextField jTextFieldCrop2;
    private javax.swing.JTextField jTextFieldResizeText;
    private javax.swing.JTextField jTextFieldRotate;
    // End of variables declaration//GEN-END:variables
}
